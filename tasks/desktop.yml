- name: Install packages
  become_user: root
  apt:
    name:
      - arandr
      - flameshot
      - gimp
      - i3
      - lxappearance
      - pavucontrol
      - rofi
      - screenkey
      - tldr
      - vlc
      - wireshark
      - wmctrl
      - xclip
      - scrot
  tags:
    - install
    - desktop
    - desktop-apt

- name: check if picom is installed
  shell: command -v picom
  register: picom_exists
  ignore_errors: yes
  tags:
    - desktop
    - picom

- name: install picom
  tags: 
    - desktop
    - picom
  when: picom_exists is failed
  block:
  - name: install picom dependencies
    become_user: root
    apt: 
      name:
        - libxext-dev 
        - libxcb1-dev 
        - libxcb-damage0-dev 
        - libxcb-xfixes0-dev 
        - libxcb-shape0-dev 
        - libxcb-render-util0-dev 
        - libxcb-render0-dev
        - libxcb-randr0-dev 
        - libxcb-composite0-dev
        - libxcb-image0-dev 
        - libxcb-present-dev 
        - libxcb-xinerama0-dev 
        - libxcb-glx0-dev 
        - libpixman-1-dev 
        - libdbus-1-dev 
        - libconfig-dev 
        - libgl1-mesa-dev 
        - libpcre2-dev 
        - libpcre3-dev 
        - libevdev-dev 
        - uthash-dev 
        - libev-dev 
        - libx11-xcb-dev
        - meson
  - name: clone picom
    ansible.builtin.git:
      repo: 'https://github.com/yshui/picom.git'
      dest: "{{ lookup('env', 'HOME') }}/third-party/picom"
      update: yes
      recursive: yes
  - name: install picom
    shell: |
      git submodule update --init --recursive
      meson --buildtype=release . build
      ninja -C build

- name: check is polybar installed
  shell: command -v polybar
  register: polybar_exists
  ignore_errors: yes
  tags: 
    - desktop
    - polybar

- name: install polybar
  tags: 
    - desktop
    - polybar
  when: polybar_exists is failed
  block:
  - name: install polybar dependencies
    become_user: root
    apt: 
      name:
        - cmake
        - cmake-data
        - libcairo2-dev
        - libjsoncpp-dev
        - 'libxcb-*'
        - libxcb-composite0-dev
        - libxcb-ewmh-dev
        - libxcb-randr0-dev
        - libxcb1-dev
        - python3-sphinx
        - python3-xcbgen
        - xcb-proto
  - name: clone polybar
    ansible.builtin.git:
      repo: 'https://github.com/jaagr/polybar.git'
      dest: "{{ lookup('env', 'HOME') }}/third-party/polybar"
      update: no
  - name: install polybar
    shell: |
      sudo ln -s /usr/include/jsoncpp/json/ /usr/include/json
      cd {{ lookup('env', 'HOME') }}/third-party/polybar
      ./build.sh

- name: clone v4l2loopback
  ansible.builtin.git:
    repo: 'https://github.com/umlaeute/v4l2loopback.git'
    dest: "{{ lookup('env', 'HOME') }}/third-party/v4l2loopback"
    update: no
  tags:
    - desktop
    - obs
    - v4l2loopback
- name: Build 4v4l2loopback
  shell: "cd {{ lookup('env', 'HOME') }}/third-party/v4l2loopback && make"
  tags:
    - desktop
    - obs
    - v4l2loopback
- name: install v4l2loopback
  shell: "cd {{ lookup('env', 'HOME') }}/third-party/v4l2loopback sudo make install"
  tags:
    - desktop
    - obs
    - v4l2loopback

- name: rofimoji deps
  apt: name={{item}}
  become_user: root
  with_items:
    - fonts-emojione
    - python3
    - rofi
    - xdotool
    - xsel
  tags:
    - install
    - dotfiles
    - rofimoji

- name: Setup rofimoji
  shell: pipx install rofimoji --force
  tags:
    - install
    - dotfiles
    - rofimoji
- name: Install signal
  shell: |
    # NOTE: These instructions only work for 64 bit Debian-based
    # Linux distributions such as Ubuntu, Mint etc.
    # 1. Install our official public software signing key
    wget -O- https://updates.signal.org/desktop/apt/keys.asc | gpg --dearmor > signal-desktop-keyring.gpg
    cat signal-desktop-keyring.gpg | sudo tee -a /usr/share/keyrings/signal-desktop-keyring.gpg > /dev/null
    # 2. Add our repository to your list of repositories
    echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/signal-desktop-keyring.gpg] https://updates.signal.org/desktop/apt xenial main' |\
      sudo tee -a /etc/apt/sources.list.d/signal-xenial.list
    # 3. Update your package database and install signal
    sudo apt update && sudo apt install signal-desktop
  tags:
    - signal

- name: install screenkey dependencies
  apt: name={{item}}
  with_items:
    - libx11-6
    - python3-gi
    - gir1.2-gtk-3.0
    - python3-cairo
    - python3-setuptools
    - python3-distutils-extra
    - fonts-font-awesome
    - gir1.2-appindicator3-0.1
    - slop
    - wget
  tags:
     screenkey-source
    - never
- name: install screenkey
  shell: |
    cd /tmp
    wget https://gitlab.com/screenkey/screenkey/-/archive/v1.3/screenkey-v1.3.tar.gz
    tar -xvf screenkey-v1.3.tar.gz
    cd screenkey-v1.3
    sudo ./setup.py install
    sudo mkdir -p /usr/local/share/applications
    sudo install data/screenkey.desktop /usr/local/share/applications
  tags:
    - screenkey-source
    - never

- name: Clone Qogir icon theme
  ansible.builtin.git:
    repo: https://github.com/vinceliuice/Qogir-icon-theme
    dest: "{{ lookup('env', 'HOME') }}/third-party/Qogir-icon-theme"
    update: no
  tags:
    - desktop
    - theme

- name: Clone Qogir theme
  ansible.builtin.git:
    repo: https://github.com/vinceliuice/Qogir-theme
    dest: "{{ lookup('env', 'HOME') }}/third-party/Qogir-theme"
    update: no
  tags:
    - desktop
    - theme

- name: install Qogir theme
  shell: |
    cd {{ lookup('env', 'HOME') }}/third-party/Qogir-theme/
    ./install.sh
  tags:
    - desktop
    - theme

- name: install Qogir icon theme
  shell:
    cd {{ lookup('env', 'HOME') }}/third-party/Qogir-icon-theme/
    ./install.sh
  tags:
    - desktop
    - theme

# - name: Install speedscope
#   community.general.npm:
#     name: speedscope
#     global: yes
